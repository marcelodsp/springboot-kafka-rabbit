version: "3.9"

# docker-compose up -d --force-recreate

services:

  mysqldb:
    container_name: mysqldb
    image: bitnami/mysql:latest
    ports:
      - 3306:3306
    volumes:
      - '.\.volume\mysql:/bitnami/mysql'
      - '.\my_custom.cnf:/opt/bitnami/mysql/conf/my_custom.cnf:ro'
    networks:
      - intranet
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: test

  # postgresql:
  #   container_name: postgresql
  #   image: bitnami/postgresql:latest
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - '.\.volume\postgresql:/bitnami/postgresql'
  #   networks:
  #     - intranet
  #   environment:
  #     POSTGRESQL_USERNAME: root
  #     POSTGRESQL_PASSWORD: password
  #     POSTGRESQL_DATABASE: test

  mongodb:
    container_name: mongodb
    image: bitnami/mongodb:latest
    ports:
      - 27017:27017
    volumes:
      - '.\.volume\mongo:/bitnami/mongodb'
    networks:
      - intranet
    environment:
      MONGODB_ROOT_USER: root
      MONGODB_ROOT_PASSWORD: password
      MONGODB_DATABASE: test

  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    restart: always
    ports:
      - "17000:8081"
    depends_on:
      - mongodb
    networks:
      - intranet
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      #ME_CONFIG_MONGODB_URL: "mongodb://root:password@kubernetes.docker.internal:27017"

networks:
  intranet:
    driver: bridge
